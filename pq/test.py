import pq
import argparse
import sys

parser = argparse.ArgumentParser(description = 'use product quantization for ann')
parser.add_argument('-f', '--features', dest='featureFile', help='features file', default=None, type=str, required = True )
parser.add_argument('-e', '--centroids', dest='centroidsFile', help='centroids path', default=None, type=str, required = True )
parser.add_argument('-i', '--images_id', dest='image_ids', help='image ids file', default=None, type=str, required = True )
parser.add_argument('-k', '--k', dest='k', help='chunk size', default=None, type=int, required = True )
parser.add_argument('-c', '--cluster', dest='clusterNum', help='cluster num for each chunk', default=None, type=int, required = True )
parser.add_argument('-d', '--dimension', dest='dimension', help='feature dimension', default=None, type=int, required = True )

if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)
args = parser.parse_args()

k = args.k #8
cluster_num = args.clusterNum #256
dimension = args.dimension #128 
indexer = pq.PQIndexer(k, cluster_num, dimension)
featurePath = args.featureFile #"data/features.txt"
centroidsPath = args.centroidsFile #"data/cluster"
indexer.createIndex(featurePath, centroidsPath)
topk = 30
query_value = [10.6768482219,-1.09751254265,4.05648759956,1.24302824799,4.57435152484,-0.61949988317,-6.88612457271,1.40778065348,0.550696034839,-6.89387805909,-7.13929138927,0.486158004519,1.28377933357,4.15703935968,0.526263973664,0.064910345035,1.55672619257,2.24877988509,2.16336303598,1.52570065962,2.95009092675,-0.247666383377,-0.369990226572,2.1022048156,-1.40012427979,-1.39557388031,0.274741923181,1.40601705755,0.411082947198,-1.11382265123,-1.80573755729,-0.387057946209,-2.82516449655,-1.36783501888,-2.13848549775,0.372884231306,0.901236174281,-0.378655839181,-1.76840847488,-1.44627907133,1.13508610717,-0.679805181734,-0.493080629351,-0.131320875878,-2.22075326382,0.10325931395,-1.12586835023,0.306795823697,-2.02611874052,1.86914721667,1.06867436614,-0.498547478062,0.780487929841,1.44825792938,0.313020052089,-0.776814018998,0.157517805353,-1.28551133857,-0.250693751637,0.195731511027,-0.176185215366,0.755748058175,-2.14943433012,-0.716987270727,0.0671358895238,-0.132269258486,-0.276166917139,1.03893450361,0.284791482233,0.50148853991,0.568108122714,-0.892051498791,0.655578959392,1.14132402493,-0.154733228142,-0.267837957753,-0.766327974325,1.21312461811,-0.5218740354,1.35372255515,1.00678917007,-0.884628151108,1.08558453714,0.0786107703667,-0.238114400294,0.668214904473,0.605827926856,-0.373579678361,-0.379334017797,0.430755310987,1.68723884095,-0.0510681173578,1.07632502499,0.0387683896738,0.37751326169,-2.25907427209,1.22329573099,-0.531262431055,-0.243882731608,0.280531200644,-0.281627460264,1.16149061498,-0.527673054156,-0.549706110166,-0.678615594272,1.05625654702,-0.980682223413,-0.255035238631,-0.249666164543,-0.639162778772,0.587012470246,0.169993373527,-0.410960731788,-0.299438150831,0.873321924766,-1.07662505278,0.489262801707,-1.61106555667,0.401609273269,0.88729188992,-0.44853843777,-1.43927638391,-1.23363205293,-0.360674847028,0.652396583105,-0.461603177342,-0.473553707119,0.418234446655]
imageFile  = open(args.image_ids, 'r') #'data/scene_files.txt'
imageList = []
for line in imageFile:
	 imageList.append(line.strip())
imageFile.close()
result = indexer.query(query_value, topk)
print "query:",imageList[0]
print "ann result:"
for item in result:
	print imageList[item]
